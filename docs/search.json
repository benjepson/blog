[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "First post!\nEverything I’ve done in the past has been in private industry, it’s time to step out and put some work in public.\nI’ve worked as an industrial food scientist and statistician.\nI’ll sometimes talk about how things work, probably more often how they don’t work.\nI’ll be adding videos on YouTube, check those out too."
  },
  {
    "objectID": "posts/Airqualityanalysis/index.html",
    "href": "posts/Airqualityanalysis/index.html",
    "title": "Indoor Air Quality Analysis",
    "section": "",
    "text": "I’m running an Airthings Wave Plus air quality meter in my basement.\nI got it earlier this year because the price was right, and I figured it would make for some interesting data projects!\nIt logs radon every hour, and every 5 minutes it logs: carbon dioxide, VOCs, humidity, temperature, and pressure. Airthings has a great phone app (bluetooth) and excellent web dashboards. For this project, I’ll be downloading the logs and working with them in R. They have an API if you want to get real time data, I hope to run a project with that in the future, but for now we’ll work with a fixed dataset.\nRadon is important to me - I live in an area where it can be a problem. Temperature isn’t too critical but since it’s logged anyways we’ll look at it, might also be an important predictor for other measurements. Humidity in the basement is important to know, I need to make sure it doesn’t get above 60% RH, at least not for long. We don’t want to have mold issues. I don’t know that it’s necessary to measure humidity, I believe I can feel when it’s too high, but since we are logging it will be nice information to have, to confirm my sensory experience. Pressure might be used as a predictor for forecasting. VOC is important to look at, I want to have healthy air. \\(CO_2\\) is (to me) a proxy for “freshness”, I doubt it will be at a harmful level, but elevated levels might indicate a need for ventilation.\nI assume through this project that the Wave Plus is accurate for each measurement. I don’t have secondary measurements for any of these to verify against. For what it’s worth I did have an inexpensive temperature/humidity meter running at the same time for the first couple of months, but the battery ran out and I haven’t replaced it. The readings seemed very similar to the Wave Plus but I have no recordings of them.\n\n\nCode\n### read in dataset\n#it comes in a single column, separated by \";\"\n# wave_data &lt;- read_delim(\"airthings_export_110623.csv\",\n#                           delim = \";\",\n#                           escape_double = FALSE,\n#                           col_types = cols(recorded = col_character()),\n#                           trim_ws = TRUE)\n# ### need to cleanup date column, there is a \"T\" between date & time\n# ### and turn it into date format\n# wave_data &lt;- wave_data %&gt;%\n#     mutate(recorded = as_datetime(gsub(pattern = \"T\",\n#                               replacement = \" \",\n#                               x = wave_data$recorded))\n#     ) %&gt;%\n# ### rename columns for convenience\n#     rename(date_time   = recorded,\n#            radon       = `RADON_SHORT_TERM_AVG pCi/L`,\n#            temperature = `TEMP °F`,\n#            humidity    = `HUMIDITY %`,\n#            pressure    = `PRESSURE mBar`,\n#            CO2         = `CO2 ppm`,\n#            VOC         = `VOC ppb`)\n# \n# ### remove first week, calibration period\n# ### you know close enough, let's just start april 1st\n# wave_data &lt;- wave_data %&gt;%\n#     filter(date_time &gt;= \"2023-04-01 00:00:00\")\n# \n# saveRDS(wave_data, file = \"wave_data.RDS\")\n\n#load the processed file\nwave_data &lt;- readRDS(\"wave_data.RDS\")\n\n\n\n\nFirst I will look at relative humidity. Humidity is a potential problem in the warmer months.\n\n\nCode\np1 &lt;- wave_data %&gt;%\n    select(date_time, humidity) %&gt;%\n    ggplot(aes(x=date_time, y=humidity))+\n    #geom_point()+\n    geom_line()+\n    labs(x = \"\", y = \"\", title = \"%RH April - November, average about 59\")+\n    geom_hline(yintercept = mean(wave_data$humidity), color = \"blue\")+\n    geom_hline(yintercept = 60, color = \"red\")\n\np2 &lt;- wave_data %&gt;%\n    select(date_time, humidity) %&gt;%\n    ggplot(aes(x=humidity))+\n    geom_histogram(color = \"white\", fill = \"light blue\") +\n    theme(axis.line = element_blank(),\n                                axis.text = element_blank(),\n                                axis.ticks = element_blank(),\n                                axis.title = element_blank()) + \n    coord_flip()\n\np1 + p2 + plot_layout(widths = c(5,1))\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nLooking over this period, I can see in general a lot of the readings are below 60, with some above 60, and a few rare points above 65. It looks like RH is higher in May, and October - this might line up with the fact that the air conditioning isn’t running around those times. Makes a lot of sense that way. It’s hard to see each day, let’s look at a smaller time period to check for patterns:\n\n\nCode\nwave_data[30000:32000, ] %&gt;%\n    select(date_time, humidity) %&gt;%\n    ggplot(aes(x=date_time, y=humidity))+\n    #geom_point()+\n    geom_line()\n\n\n\n\n\n\n\n\n\nI didn’t mention yet, %RH is recorded in 0.5% intervals, so there is some chunkiness. I believe measuring every 5 minutes is excessive, I could probably measure once an hour (or less) or take a daily average. Humidity rises and falls but I don’t know how predictable that’s going to be. Definitely cyclic and it looks like it rises through the day, and falls during the night. Not surprising.\nInteractive plot for exploration:\n\n\nCode\nwave_data %&gt;%\n    select(date_time, humidity) %&gt;%\n    ggplot(aes(x=date_time, y=humidity))+\n    geom_line()+\n    labs(x = \"\", y = \"\", title = \"%RH April - November, average about 59\")+\n    geom_hline(yintercept = mean(wave_data$humidity), color = \"blue\")+\n    geom_hline(yintercept = 60, color = \"red\") -&gt; p \n\n    ggplotly(p, dynamicTicks = TRUE) %&gt;% \n        rangeslider()\n\n\n\n\n\n\nZooming in on sections helps me see the cyclic nature, in general humidity does rise during the day and fall at night.\n\n\nI’ve already learned enough to answer my question!\nThe basement felt fine, no issues! No need for a dehumidifier. Unless/until something changes - next year? Never?\nIn general, %RH stayed in a good range, there were some higher days but this didn’t seem to cause problems. Next I’ll look at how long the humidity was above 60%, even though it went higher from time to time I bet it was for relatively short intervals.\nKnowing how long humidity was above 60% will help me understand my conclusion that %RH was not an issue this year.\n\n\n\n\n\n\nCode\nhumid_RL &lt;- wave_data %&gt;% \n    select(date_time, humidity) %&gt;% \n    mutate(over_60 = case_when(humidity &gt; 60 ~ TRUE, \n                               .default = FALSE))\nsetDT(humid_RL)\nhumid_RL$RLID &lt;- rleid(humid_RL$over_60) #run length for gt/lt 60\n\nhumid_RL[over_60 == TRUE] %&gt;% \n    group_by(RLID) %&gt;% \n    summarize(hours_above_60 = (sum(over_60)) * 5 / 60) %&gt;% \n\n    ggplot(aes(x=RLID, y=hours_above_60))+\n    geom_col()+\n    labs(x = \"Run ID\", y = \"hours above 60% RH\", title = \"How long was each period of time above 60%RH?\")\n\n\n\n\n\n\n\n\n\nThis is neat - I see that most excursions above 60% RH were for about a day or less, a few were between 2-4 days, and the longest was about 6 days. Seems that while the humidity did rise sometimes, as long as it’s for less than a week I probably won’t have issues? This is imprecise and doesn’t take into account how far above 60% it was, but it’s a start to understanding.\n\n\nCode\nhumid_intermediate &lt;- humid_RL %&gt;% \n    group_by(RLID) %&gt;% \n    mutate(counter_var = 1) %&gt;%\n    summarize(hours_above_below_60 = sum(counter_var) * 5 / 60)\n\nhumid_RL %&gt;% \n    select(RLID, over_60) %&gt;% unique() %&gt;% \n    left_join(humid_intermediate, by = \"RLID\") %&gt;% \n#Now I have the FALSE segments aka 60 or below\n#I guess save false, and spc?\n    filter(over_60 == FALSE) %&gt;% \n    ggplot(aes(x = RLID, y = hours_above_below_60))+\n    geom_point()+\n    geom_line()+\n    stat_QC(method = \"XmR\")\n\n\n\n\n\n\n\n\n\n\n\n\nI’m going to downsample to hourly, I don’t need to track humidity every five minutes.\n\n\nCode\nwave_ts &lt;- wave_data %&gt;% \n    select(date_time, humidity) %&gt;% \n    group_by(hour = floor_date(date_time, \"hour\")) %&gt;%\n    slice(1) %&gt;% \n    ungroup %&gt;% \n    select(-hour) %&gt;% \n    mutate(date_time = floor_date(date_time, unit = \"hour\"))\n\nwave_ts &lt;- wave_ts %&gt;% as_tsibble(index = date_time)\nwave_ts %&gt;% autoplot(humidity)\n\n\n\n\n\n\n\n\n\nThere is a lot of up and down movement, is it cyclic or seasonal? I expect some seasonality - for example at night in the summer I turn the air conditioning cooler, which should lower the humidity at night. I only have spring, summer, and part of fall - if I had several years I expect seasonality with the seasons, with lowest RH in winter.\n\n\nCode\nwave_ts %&gt;% fill_gaps() %&gt;% \n    autoplot(humidity)\n\n\n\n\n\n\n\n\n\nCode\nNN_humidity &lt;- wave_ts %&gt;% \n    fill_gaps() %&gt;% \n    model(NNETAR(humidity))\n\nNN_humidity %&gt;% \n    forecast(h = ) %&gt;% \n    autoplot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(fable.prophet)\n\n\nWarning: package 'fable.prophet' was built under R version 4.2.3\n\n\nLoading required package: Rcpp\n\n\nWarning: package 'Rcpp' was built under R version 4.2.3\n\n\nCode\nhumid_prophet &lt;- wave_ts %&gt;% fill_gaps() %&gt;% \n    model(prophet(humidity)\n    )\n\nhumid_prophet %&gt;% \n    components() %&gt;% autoplot()\n\n\n\n\n\n\n\n\n\nCode\nhumid_prophet %&gt;% gg_tsresiduals()\n\n\nWarning: Removed 92 rows containing missing values (`geom_point()`).\n\n\nWarning: Removed 92 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\n\n\n\n\nCode\nhumid_ARIMA &lt;- wave_ts %&gt;% fill_gaps() %&gt;% \n    model(\n        ARIMA(humidity)\n    )\n\n\nWarning in sqrt(diag(best$var.coef)): NaNs produced\n\n\nCode\nhumid_ARIMA %&gt;% forecast(h = \"2 weeks\") %&gt;% autoplot()\n\n\n\n\n\n\n\n\n\n\n\n\nLet’s look at just one observation per hour, how different would the results look?\n\n\nCode\nwave_data %&gt;% \n    select(date_time, humidity) %&gt;% \n    group_by(hour = floor_date(date_time, \"hour\")) %&gt;%\n    slice(1) %&gt;% \n    ungroup %&gt;% \n    select(-hour) %&gt;% \n    ggplot(aes(x=date_time, y=humidity))+\n    geom_line()+\n    labs(x = \"\", y = \"\", title = \"%RH April - First observation of every hour\")+\n    geom_hline(yintercept = mean(wave_data$humidity), color = \"blue\")+\n    geom_hline(yintercept = 60, color = \"red\") -&gt; p \n\n    ggplotly(p, dynamicTicks = TRUE) %&gt;% \n        rangeslider()\n\n\n\n\n\n\nLooks great!\n\n\n\nDaily\nWeekly"
  },
  {
    "objectID": "posts/Airqualityanalysis/index.html#introduction",
    "href": "posts/Airqualityanalysis/index.html#introduction",
    "title": "Indoor Air Quality Analysis",
    "section": "",
    "text": "I’m running an Airthings Wave Plus air quality meter in my basement.\nI got it earlier this year because the price was right, and I figured it would make for some interesting data projects!\nIt logs radon every hour, and every 5 minutes it logs: carbon dioxide, VOCs, humidity, temperature, and pressure. Airthings has a great phone app (bluetooth) and excellent web dashboards. For this project, I’ll be downloading the logs and working with them in R. They have an API if you want to get real time data, I hope to run a project with that in the future, but for now we’ll work with a fixed dataset.\nRadon is important to me - I live in an area where it can be a problem. Temperature isn’t too critical but since it’s logged anyways we’ll look at it, might also be an important predictor for other measurements. Humidity in the basement is important to know, I need to make sure it doesn’t get above 60% RH, at least not for long. We don’t want to have mold issues. I don’t know that it’s necessary to measure humidity, I believe I can feel when it’s too high, but since we are logging it will be nice information to have, to confirm my sensory experience. Pressure might be used as a predictor for forecasting. VOC is important to look at, I want to have healthy air. \\(CO_2\\) is (to me) a proxy for “freshness”, I doubt it will be at a harmful level, but elevated levels might indicate a need for ventilation.\nI assume through this project that the Wave Plus is accurate for each measurement. I don’t have secondary measurements for any of these to verify against. For what it’s worth I did have an inexpensive temperature/humidity meter running at the same time for the first couple of months, but the battery ran out and I haven’t replaced it. The readings seemed very similar to the Wave Plus but I have no recordings of them.\n\n\nCode\n### read in dataset\n#it comes in a single column, separated by \";\"\n# wave_data &lt;- read_delim(\"airthings_export_110623.csv\",\n#                           delim = \";\",\n#                           escape_double = FALSE,\n#                           col_types = cols(recorded = col_character()),\n#                           trim_ws = TRUE)\n# ### need to cleanup date column, there is a \"T\" between date & time\n# ### and turn it into date format\n# wave_data &lt;- wave_data %&gt;%\n#     mutate(recorded = as_datetime(gsub(pattern = \"T\",\n#                               replacement = \" \",\n#                               x = wave_data$recorded))\n#     ) %&gt;%\n# ### rename columns for convenience\n#     rename(date_time   = recorded,\n#            radon       = `RADON_SHORT_TERM_AVG pCi/L`,\n#            temperature = `TEMP °F`,\n#            humidity    = `HUMIDITY %`,\n#            pressure    = `PRESSURE mBar`,\n#            CO2         = `CO2 ppm`,\n#            VOC         = `VOC ppb`)\n# \n# ### remove first week, calibration period\n# ### you know close enough, let's just start april 1st\n# wave_data &lt;- wave_data %&gt;%\n#     filter(date_time &gt;= \"2023-04-01 00:00:00\")\n# \n# saveRDS(wave_data, file = \"wave_data.RDS\")\n\n#load the processed file\nwave_data &lt;- readRDS(\"wave_data.RDS\")\n\n\n\n\nFirst I will look at relative humidity. Humidity is a potential problem in the warmer months.\n\n\nCode\np1 &lt;- wave_data %&gt;%\n    select(date_time, humidity) %&gt;%\n    ggplot(aes(x=date_time, y=humidity))+\n    #geom_point()+\n    geom_line()+\n    labs(x = \"\", y = \"\", title = \"%RH April - November, average about 59\")+\n    geom_hline(yintercept = mean(wave_data$humidity), color = \"blue\")+\n    geom_hline(yintercept = 60, color = \"red\")\n\np2 &lt;- wave_data %&gt;%\n    select(date_time, humidity) %&gt;%\n    ggplot(aes(x=humidity))+\n    geom_histogram(color = \"white\", fill = \"light blue\") +\n    theme(axis.line = element_blank(),\n                                axis.text = element_blank(),\n                                axis.ticks = element_blank(),\n                                axis.title = element_blank()) + \n    coord_flip()\n\np1 + p2 + plot_layout(widths = c(5,1))\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nLooking over this period, I can see in general a lot of the readings are below 60, with some above 60, and a few rare points above 65. It looks like RH is higher in May, and October - this might line up with the fact that the air conditioning isn’t running around those times. Makes a lot of sense that way. It’s hard to see each day, let’s look at a smaller time period to check for patterns:\n\n\nCode\nwave_data[30000:32000, ] %&gt;%\n    select(date_time, humidity) %&gt;%\n    ggplot(aes(x=date_time, y=humidity))+\n    #geom_point()+\n    geom_line()\n\n\n\n\n\n\n\n\n\nI didn’t mention yet, %RH is recorded in 0.5% intervals, so there is some chunkiness. I believe measuring every 5 minutes is excessive, I could probably measure once an hour (or less) or take a daily average. Humidity rises and falls but I don’t know how predictable that’s going to be. Definitely cyclic and it looks like it rises through the day, and falls during the night. Not surprising.\nInteractive plot for exploration:\n\n\nCode\nwave_data %&gt;%\n    select(date_time, humidity) %&gt;%\n    ggplot(aes(x=date_time, y=humidity))+\n    geom_line()+\n    labs(x = \"\", y = \"\", title = \"%RH April - November, average about 59\")+\n    geom_hline(yintercept = mean(wave_data$humidity), color = \"blue\")+\n    geom_hline(yintercept = 60, color = \"red\") -&gt; p \n\n    ggplotly(p, dynamicTicks = TRUE) %&gt;% \n        rangeslider()\n\n\n\n\n\n\nZooming in on sections helps me see the cyclic nature, in general humidity does rise during the day and fall at night.\n\n\nI’ve already learned enough to answer my question!\nThe basement felt fine, no issues! No need for a dehumidifier. Unless/until something changes - next year? Never?\nIn general, %RH stayed in a good range, there were some higher days but this didn’t seem to cause problems. Next I’ll look at how long the humidity was above 60%, even though it went higher from time to time I bet it was for relatively short intervals.\nKnowing how long humidity was above 60% will help me understand my conclusion that %RH was not an issue this year.\n\n\n\n\n\n\nCode\nhumid_RL &lt;- wave_data %&gt;% \n    select(date_time, humidity) %&gt;% \n    mutate(over_60 = case_when(humidity &gt; 60 ~ TRUE, \n                               .default = FALSE))\nsetDT(humid_RL)\nhumid_RL$RLID &lt;- rleid(humid_RL$over_60) #run length for gt/lt 60\n\nhumid_RL[over_60 == TRUE] %&gt;% \n    group_by(RLID) %&gt;% \n    summarize(hours_above_60 = (sum(over_60)) * 5 / 60) %&gt;% \n\n    ggplot(aes(x=RLID, y=hours_above_60))+\n    geom_col()+\n    labs(x = \"Run ID\", y = \"hours above 60% RH\", title = \"How long was each period of time above 60%RH?\")\n\n\n\n\n\n\n\n\n\nThis is neat - I see that most excursions above 60% RH were for about a day or less, a few were between 2-4 days, and the longest was about 6 days. Seems that while the humidity did rise sometimes, as long as it’s for less than a week I probably won’t have issues? This is imprecise and doesn’t take into account how far above 60% it was, but it’s a start to understanding.\n\n\nCode\nhumid_intermediate &lt;- humid_RL %&gt;% \n    group_by(RLID) %&gt;% \n    mutate(counter_var = 1) %&gt;%\n    summarize(hours_above_below_60 = sum(counter_var) * 5 / 60)\n\nhumid_RL %&gt;% \n    select(RLID, over_60) %&gt;% unique() %&gt;% \n    left_join(humid_intermediate, by = \"RLID\") %&gt;% \n#Now I have the FALSE segments aka 60 or below\n#I guess save false, and spc?\n    filter(over_60 == FALSE) %&gt;% \n    ggplot(aes(x = RLID, y = hours_above_below_60))+\n    geom_point()+\n    geom_line()+\n    stat_QC(method = \"XmR\")\n\n\n\n\n\n\n\n\n\n\n\n\nI’m going to downsample to hourly, I don’t need to track humidity every five minutes.\n\n\nCode\nwave_ts &lt;- wave_data %&gt;% \n    select(date_time, humidity) %&gt;% \n    group_by(hour = floor_date(date_time, \"hour\")) %&gt;%\n    slice(1) %&gt;% \n    ungroup %&gt;% \n    select(-hour) %&gt;% \n    mutate(date_time = floor_date(date_time, unit = \"hour\"))\n\nwave_ts &lt;- wave_ts %&gt;% as_tsibble(index = date_time)\nwave_ts %&gt;% autoplot(humidity)\n\n\n\n\n\n\n\n\n\nThere is a lot of up and down movement, is it cyclic or seasonal? I expect some seasonality - for example at night in the summer I turn the air conditioning cooler, which should lower the humidity at night. I only have spring, summer, and part of fall - if I had several years I expect seasonality with the seasons, with lowest RH in winter.\n\n\nCode\nwave_ts %&gt;% fill_gaps() %&gt;% \n    autoplot(humidity)\n\n\n\n\n\n\n\n\n\nCode\nNN_humidity &lt;- wave_ts %&gt;% \n    fill_gaps() %&gt;% \n    model(NNETAR(humidity))\n\nNN_humidity %&gt;% \n    forecast(h = ) %&gt;% \n    autoplot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(fable.prophet)\n\n\nWarning: package 'fable.prophet' was built under R version 4.2.3\n\n\nLoading required package: Rcpp\n\n\nWarning: package 'Rcpp' was built under R version 4.2.3\n\n\nCode\nhumid_prophet &lt;- wave_ts %&gt;% fill_gaps() %&gt;% \n    model(prophet(humidity)\n    )\n\nhumid_prophet %&gt;% \n    components() %&gt;% autoplot()\n\n\n\n\n\n\n\n\n\nCode\nhumid_prophet %&gt;% gg_tsresiduals()\n\n\nWarning: Removed 92 rows containing missing values (`geom_point()`).\n\n\nWarning: Removed 92 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\n\n\n\n\nCode\nhumid_ARIMA &lt;- wave_ts %&gt;% fill_gaps() %&gt;% \n    model(\n        ARIMA(humidity)\n    )\n\n\nWarning in sqrt(diag(best$var.coef)): NaNs produced\n\n\nCode\nhumid_ARIMA %&gt;% forecast(h = \"2 weeks\") %&gt;% autoplot()\n\n\n\n\n\n\n\n\n\n\n\n\nLet’s look at just one observation per hour, how different would the results look?\n\n\nCode\nwave_data %&gt;% \n    select(date_time, humidity) %&gt;% \n    group_by(hour = floor_date(date_time, \"hour\")) %&gt;%\n    slice(1) %&gt;% \n    ungroup %&gt;% \n    select(-hour) %&gt;% \n    ggplot(aes(x=date_time, y=humidity))+\n    geom_line()+\n    labs(x = \"\", y = \"\", title = \"%RH April - First observation of every hour\")+\n    geom_hline(yintercept = mean(wave_data$humidity), color = \"blue\")+\n    geom_hline(yintercept = 60, color = \"red\") -&gt; p \n\n    ggplotly(p, dynamicTicks = TRUE) %&gt;% \n        rangeslider()\n\n\n\n\n\n\nLooks great!\n\n\n\nDaily\nWeekly"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Join me as I go through projects that interest me."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ben’s projects",
    "section": "",
    "text": "Indoor Air Quality Analysis\n\n\n\n\n\n\nAirquality\n\n\nintuitive analysis\n\n\nSPC\n\n\n\nEvaluating air quality\n\n\n\n\n\nBen Jepson\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nBen Jepson\n\n\n\n\n\n\nNo matching items"
  }
]